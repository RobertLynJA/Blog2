name: Deploy-To-Dev
concurrency: deploy-development

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  build:

    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: BuildUI
      run: |
        npm install --prefix web
        npm test --prefix web
        npm run build --prefix web        
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: |
        dotnet test --no-build --verbosity normal DataFacade.Tests/DataFacade.Tests.csproj
        dotnet test --no-build --verbosity normal API.Tests/API.Tests.csproj
    - name: Publish
      run: |
        dotnet publish ./API/API.csproj  -c Release -o ./release        
    - name: Upload a Build Artifact (.Net)
      uses: actions/upload-artifact@v3
      with:
        name: website
        path: ./release/**
        if-no-files-found: error
    - name: Upload a Build Artifact (React)
      uses: actions/upload-artifact@v3
      with:
        name: react
        path: ./web/build/**
        if-no-files-found: error
            
  deploy:
  
    needs: build
    runs-on: [ self-hosted, Development ]
    environment: Development
    env:
      deploy-folder: c:/websites/robertlynja
    
    steps:
    - name: Download a Build Artifact (.Net)
      uses: actions/download-artifact@v3
      with:
        name: website
        path: website
    - name: Download a Build Artifact (React)
      uses: actions/download-artifact@v3
      with:
        name: react
        path: website/wwwroot        
    - name: Add secrets 
      uses: microsoft/variable-substitution@v1 
      with:
        files: './website/appsettings.json'
      env:
        ConnectionStrings.DefaultConnection: ${{ secrets.SQL_CONNECTION_STRING }}
    - name: Take app offline
      run: |
        Copy-Item ./website/wwwroot/app_offline.htm ${{ env.deploy-folder }} -Force
        Start-Sleep -Seconds 30
    - name: Delete Existing files
      run:  Remove-Item ${{ env.deploy-folder }}/* -Exclude app_offline.htm -Recurse
    - name: Deploy
      run: Copy-Item ./website/* ${{ env.deploy-folder }} -Recurse -Force
    - name: Remove app offline        
      run: Remove-Item ${{ env.deploy-folder }}/app_offline.htm
      
