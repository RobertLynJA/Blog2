name: Build
concurrency: deploy

on: 
  push:
    branches:
      - "main"
      - "release"
  pull_request:
    branches:
      - "main"

jobs:
  build-react:

    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-        
    - name: BuildUI
      run: |
        npm install --prefix web
        npm test --prefix web
        npm run build --prefix web        
    - name: Upload a Build Artifact (React)
      uses: actions/upload-artifact@v3
      with:
        name: react
        path: ./web/build/**
        if-no-files-found: error

  build-dotnet:

    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Cache Nuget
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-  
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: |
        dotnet test --no-build --verbosity normal DataFacade.Tests/DataFacade.Tests.csproj
        dotnet test --no-build --verbosity normal API.Tests/API.Tests.csproj
    - name: Publish
      run: |
        dotnet publish ./API/API.csproj  -c Release -o ./release        
    - name: Upload a Build Artifact (.Net)
      uses: actions/upload-artifact@v3
      with:
        name: api
        path: ./release/**
        if-no-files-found: error

  deploy-app-service:
  
    needs: build-dotnet
    runs-on: windows-latest
    if: ${{ github.event_name == 'push' }}
    environment:
      name: Production
      url: https://www.robertlynja.com
      
    defaults:
      run:
        shell: powershell
      
    steps:
    - name: Download a Build Artifact (.Net)
      uses: actions/download-artifact@v3
      with:
        name: api
        path: website
    - name: Add secrets 
      uses: robertlynja/variable-substitution@v1.02
      with:
        files: './website/appsettings.json'
      env:
        ConnectionStrings.DefaultConnection: ${{ secrets.SQL_CONNECTION_STRING }}
    # Deploy to Azure Web apps
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2.2.5
      with: 
        app-name: 'RobertLynJA'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
        package: './website'
        
  deploy-static-app:
  
    needs: build-react
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    
    environment:
      name: Production
      url: https://www.robertlynja.com        
      
    steps:      
    - name: Download a Build Artifact (React)
      uses: actions/download-artifact@v3
      with:
        name: react
        path: react
    - name: 'Deploy Static Web App'
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: "upload"
        app_location: "react" # App source code path relative to repository root
        skip_app_build: true
